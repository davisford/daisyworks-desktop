<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 width="100%" height="100%" xmlns:components="daisyworks.view.components.*">
	<fx:Script>
		<![CDATA[
			import daisyworks.event.BluetoothTxRxEvent;
			import daisyworks.model.Icons;
			import daisyworks.model.Preferences;
			
			import mx.controls.Alert;
			import mx.events.ResizeEvent;
			import mx.messaging.events.MessageEvent;
			import mx.rpc.Fault;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			[Inject]
			public var prefs:Preferences;
			
			[Bindable]
			public var isConnected:Boolean = false;
			
			
			[EventHandler(event="BluetoothControlEvent.CONNECTED")]
			public function connected():void {
				isConnected=true;
			}
			
			[EventHandler(event="BluetoothControlEvent.DISCONNECTED")]
			public function disconnected():void {
				isConnected=false;
			}
			
			// _________________ TRANSMIT _________________ //
			
			protected function sendTI_keyDownHandler(event:KeyboardEvent):void {				
				if(event.keyCode == Keyboard.ENTER) {
					sendTextCommand(sendTI.text);
				}
			}
			
			protected function sendButton_clickHandler(event:MouseEvent):void {
				sendTextCommand(sendTI.text);
			}
			
			protected function clearButton_clickHandler(event:MouseEvent):void {
				consoleTA.text = '';
			}
						
			private function sendTextCommand(command:String):void {
				// clear TI
				sendTI.text = '';
				// append it to text area
				consoleTA.text += '\ntx> ' + command;
				// send it to the device
				if(crRadioGroup.selection == crOFF)
					dispatchEvent(new BluetoothTxRxEvent(BluetoothTxRxEvent.TX, command));
				else
					dispatchEvent(new BluetoothTxRxEvent(BluetoothTxRxEvent.TX, command+"\r"));
			}
			
			[EventHandler(event="BluetoothTxRxEvent.TX_FAULT", properties="fault")]
			public function sendFault(fault:Fault):void {
				if(consoleTA)
					consoleTA.text += '\ntx error> ' + fault.faultString;
			}
			
			// ___________________ RECEIVE ___________________ //

			[EventHandler(event="BluetoothTxRxEvent.RX", properties="data")]
			public function messageReceived(data:String):void {
				// short-circuit if the panel is not open
				if(debugPanel.collapsed) { return; }
				
				if(consoleTA) {
					if(consoleTA.text.length >= 1000) {
						consoleTA.text = '';
					}
					
					consoleTA.text += '\nrx> ' + data;
					scrollDown();
				}
			}
				
			private function scrollDown(event:Event=null):void {
				// scroll with the text
				if(consoleTA) {
					if(consoleTA.scroller != null) {
						consoleTA.scroller.verticalScrollBar.value = consoleTA.scroller.verticalScrollBar.maximum + 100;
					}
					
				}
			}
			
			private const crToolTip:String = "Most commands will not need a trailing carriage return <CR>; however, some special debug modes do require it.  Use the radio button to toggle sending a carriage return or not.";

			private function smoothImage(evt:Event):void{
		/* 		var myBitmap:Bitmap = ((evt.target as Image).content as Bitmap);
				if (myBitmap != null) {
					myBitmap.smoothing = true;
				} */
			}
	
			protected function debugPanel_collapseChangeHandler(event:Event):void
			{
				if(debugPanel.collapsed) {
					currentState = "Collapsed";
				} else {
					currentState = "Expanded";
				}
			}
			
		]]>
	</fx:Script>
	
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		@namespace components "daisyworks.view.components.*";
		
		.formTextArea {
			borderVisible: false;
			contentBackgroundColor: #FFFFFF;
		}
		
		.formItemMajorStep {
			borderVisible: true;
			borderThickness: 2;
			dropShadowVisible: true;
			cornerRadius: 8;
			
		}
	</fx:Style>
	
	<s:states>
		<s:State name="Collapsed" />
		<s:State name="Expanded" />
	</s:states>
	
	<fx:Declarations>
		<s:RadioButtonGroup id="crRadioGroup"/>

	</fx:Declarations>
	
	<s:layout>
		<s:HorizontalLayout gap="10"/>
	</s:layout>
	<components:CollapsiblePanel id="debugPanel" width.Expanded="100%"  height="100%" title="Debug Console" skinClass="daisyworks.view.skins.CollapsiblePanelSkin"
			collapseChange="debugPanel_collapseChangeHandler(event)">
		<components:layout>
			<s:VerticalLayout paddingRight="10" paddingLeft="10" paddingTop="10" paddingBottom="10" />
		</components:layout>
			<s:HGroup height="30" verticalAlign="middle" width="100%" paddingLeft="10">
				<s:TextInput width="100%" id="sendTI" keyDown="sendTI_keyDownHandler(event)" enabled="{isConnected}"/>
				<s:Button label="Send" id="sendButton" click="sendButton_clickHandler(event)" enabled="{isConnected}"/>
				<mx:VRule height="100%"/>
				<s:Button label="Clear" id="clearButton" click="clearButton_clickHandler(event)" />
				<mx:VRule height="100%"/>
				<s:HGroup width="100%" height="100%" toolTip="{crToolTip}" verticalAlign="middle">
					<s:Label text="Carriage Return"/>
					<s:RadioButton id="crON" label="On" groupName="Carriage Return"/>
					<s:RadioButton id="crOFF" label="Off" groupName="Carriage Return" selected="true"/>
				</s:HGroup>
			</s:HGroup>
			<s:TextArea width="100%" height="100%" id="consoleTA" editable="false" 
						enabled="true" verticalScrollPolicy="on" 
						valueCommit="scrollDown(event)"
						resize="scrollDown(event)" contentBackgroundColor="#E6E7E2" borderVisible="false"/>
	</components:CollapsiblePanel>
	<mx:VBox label="Help" 
			 	 includeIn="Collapsed"
				 width="100%" 
				 height="100%" 
				 horizontalAlign="left"
				 paddingLeft="10" 
				 paddingRight="10" 
				 paddingTop="10" 
				 paddingBottom="10" 
				 textAlign="left">
		<s:Scroller width="100%" height="100%">
			<s:Group>
			<s:layout>
				<s:BasicLayout />
			</s:layout>
			<mx:Image left="10" top="10" complete="smoothImage(event)" source="{Icons.DAISYWORKS}" />
			<s:Form left="10" right="10" top="175">
				<s:FormHeading label="QuickStart" />
				
				<!-- ____________________________ DISCOVER / CONNECT __________________________ -->
				<s:Image source="{Icons.BLUETOOTH}" />
				<s:FormItem width="100%" label="Discover / Connect" sequenceLabel="1.">		
					<s:BorderContainer width="100%" height="100%" styleName="formItemMajorStep">
						<s:VGroup width="100%" height="100%" gap="0">
							<s:FormItem width="100%" sequenceLabel="a)" skinClass="spark.skins.spark.FormItemSkin" >
								<s:RichText width="100%">
									<s:textFlow>
										<s:TextFlow>Use <s:span textDecoration="underline">Discover/Connect</s:span> to discover any Bluetooth-enabled Daisy devices in proximity.</s:TextFlow>
									</s:textFlow>
								</s:RichText>
							</s:FormItem>
							<s:FormItem sequenceLabel="b)" width="100%" skinClass="spark.skins.spark.FormItemSkin">
								<s:RichText width="100%">
									<s:textFlow>
										<s:TextFlow>Connect to a Daisy by selecting it's name from the list.  <s:span fontStyle="italic">You must be connected to a Daisy to interact with it. The Debug Console and Apps will be disabled until you connect.</s:span>
										</s:TextFlow>
									</s:textFlow>
								</s:RichText>
							</s:FormItem>
							<s:FormItem sequenceLabel="c)" width="100%" skinClass="spark.skins.spark.FormItemSkin">
								<s:RichText width="100%">
									<s:textFlow>
										<s:TextFlow>The <s:span textDecoration="underline">Debug Console</s:span> allows you to transmit and receive raw commands to/from the Daisy.  
										</s:TextFlow>
									</s:textFlow>
								</s:RichText>
							</s:FormItem>
						</s:VGroup>	
					</s:BorderContainer>
				</s:FormItem>
				
				<!-- _____________________________ DAISYWORKS APP STORE ________________________ -->
				<s:Image source="{Icons.APPLICATIONS}" />
				<s:FormItem width="100%" label="Daisyworks App Store" sequenceLabel="2.">
					<s:BorderContainer width="100%" height="100%" styleName="formItemMajorStep">
						<s:VGroup width="100%" height="100%" gap="0">
							<s:FormItem sequenceLabel="a)" width="100%" skinClass="spark.skins.spark.FormItemSkin">
								<s:RichText width="100%">
									<s:textFlow>
										<s:TextFlow>Browse the <s:span textDecoration="underline">DaisywWorks App Store</s:span> to find Apps that you want to install.
										</s:TextFlow>
									</s:textFlow>	
								</s:RichText>
							</s:FormItem>
							<s:FormItem sequenceLabel="b)" width="100%" skinClass="spark.skins.spark.FormItemSkin">
								<s:RichText width="100%">
									<s:textFlow>
										<s:TextFlow>Select an App Icon to view more detailed information.  You can install the App from the details page.
										</s:TextFlow>
									</s:textFlow>
								</s:RichText>
							</s:FormItem>
						</s:VGroup>
					</s:BorderContainer>
				</s:FormItem>
				
				<!-- _____________________________ INSTALLED APPLICATIONS _______________________ -->
				<s:Image source="{Icons.INSTALLED_APPS}" />
				<s:FormItem width="100%" label="Installed Applications" sequenceLabel="3.">
					<s:BorderContainer width="100%" height="100%" styleName="formItemMajorStep">
						<s:VGroup width="100%" height="100%" gap="0">
							<s:FormItem sequenceLabel="a)" width="100%" skinClass="spark.skins.spark.FormItemSkin">
								<s:RichText width="100%">
									<s:textFlow>
										<s:TextFlow>View <s:span textDecoration="underline">Installed Applications</s:span> to review the Apps you have installed.  Each App may include: 
										</s:TextFlow>
									</s:textFlow>
								</s:RichText>
								<s:RichText width="100%">
									<s:textFlow>
										<s:TextFlow>
											<s:list>
												<s:li><s:span fontWeight="bold">Firmware</s:span> software that runs on the Daisy which controls the device and interacts with sensors or controls.
												</s:li>
												<s:li><s:span fontWeight="bold">User Interface (UI)</s:span> graphical application which allows you to interact with the Daisy through your computer.  
													It may contain graphs, sliders, buttons, or other widgets that allow you to interact with sensors or controls in real-time.
												</s:li>
												<s:li><s:span fontWeight="bold">Both</s:span> some Apps will have both firmware and a UI.</s:li>
											</s:list>
										</s:TextFlow>
									</s:textFlow>
								</s:RichText>
							</s:FormItem>
							<s:FormItem sequenceLabel="b)" width="100%" skinClass="spark.skins.spark.FormItemSkin">
								<s:RichText width="100%">
									<s:textFlow>
										<s:TextFlow>To load an App, select it's name from the list of installed Apps.  If it contains firmware, you will have the ability to program the firmware on the Daisy (this will
											overwrite any existing firmware on the device.)  If the App contains UI, it will load and be visible.  The UI will be disabled until you connect to a Daisy.
										</s:TextFlow>
									</s:textFlow>
								</s:RichText>
							</s:FormItem>
						</s:VGroup>
					</s:BorderContainer>
				</s:FormItem>
			</s:Form>
		</s:Group>
		</s:Scroller>
		
		
	</mx:VBox>
		
</s:Group>
