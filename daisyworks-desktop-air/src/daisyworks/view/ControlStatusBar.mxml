<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="25" currentState="Disconnected" height.Disconnected="30">
	<s:layout>
		<s:HorizontalLayout verticalAlign.Disconnected="middle" verticalAlign.Connected="middle" paddingRight.Disconnected="10" paddingLeft.Disconnected="5"/>
	</s:layout>
	<s:states>
		<s:State name="Connected"/>
		<s:State name="Disconnected"/>
	</s:states>
	
	<fx:Script>
		<![CDATA[
			import daisyworks.event.BluetoothEvent;
			import daisyworks.model.Device;
			import daisyworks.model.Icons;
			import daisyworks.model.Preferences;
			
			import mx.controls.Alert;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			private var remoteDevice:Device;
			
			[Bindable]
			private var localDevice:Device;
			
			[Inject]
			public var prefs:Preferences;
			
			[PostConstruct]
			public function init():void {
				remoteObject.endpoint = "http://localhost:" + prefs.getValue("port", "8080") + "/daisyworks/messagebroker/amf";
			}
			
			// __________ GET LOCAL DEVICE ____________ //
			private function localDeviceResult(evt:ResultEvent):void {
				localDevice = evt.result as Device;
			}
			
			private function localDeviceFault(evt:FaultEvent):void {
				Alert.show(evt.fault.faultString, "Failed to find local Bluetooth Adapter Information");
			}
			
			[EventHandler(event="DaisyWorksEvent.JVM_STARTED")]
			public function postJvmStarted():void {
				remoteObject.getLocalDevice();
			}
						
			[EventHandler(event="BluetoothEvent.CONNECTED", properties="device")]
			public function connected(device:Device):void {
				remoteDevice = device;
				currentState = 'Connected';
			}
			
			[EventHandler(event="BluetoothEvent.DISCONNECTED")]
			public function disconnected():void {
				remoteDevice = null;
				currentState = 'Disconnected';
			}

			protected function disconnect_clickHandler(event:MouseEvent):void {
				dispatchEvent(new BluetoothEvent(BluetoothEvent.DISCONNECT, remoteDevice));
			}

		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:RemoteObject id="remoteObject" destination="bluetoothService" showBusyCursor="false" >
			<s:method name="getLocalDevice" result="localDeviceResult(event)" fault="localDeviceFault(event)" />
		</s:RemoteObject>
	</fx:Declarations>
	<mx:Image source="{Icons.DISCONNECTED}" includeIn="Disconnected" />
	<s:Label includeIn="Disconnected" text="Not Connected"/>
	<mx:Image source="{Icons.CONNECTED}" includeIn="Connected" />
	<s:Label includeIn="Connected" text="Connected To"/>
	<mx:VRule includeIn="Connected" height="100%"/>
	<s:Label includeIn="Connected" text="{remoteDevice.name} / {remoteDevice.address}"/>
	<mx:VRule includeIn="Connected" height="100%"/>
	<s:Button includeIn="Connected" label="Disconnect" click="disconnect_clickHandler(event)"/>
	<s:HGroup width="100%" horizontalAlign="right" verticalAlign="middle" height="100%" paddingRight="5">
		<mx:VRule height="100%"/>
		<mx:Image source="{Icons.BLUETOOTH_SMALL}"/>
		<s:Label text="{localDevice.name} / {localDevice.address}"/>
	</s:HGroup>
</s:Group>
