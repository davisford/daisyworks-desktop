<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%">
	<fx:Script>
		<![CDATA[
			import daisyworks.model.Icons;
			import daisyworks.model.Preferences;
			
			import mx.controls.Alert;
			import mx.events.ResizeEvent;
			import mx.messaging.events.MessageEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			[Inject]
			public var prefs:Preferences;
			
			[Bindable]
			public var isConnected:Boolean = false;
			
			[PostConstruct]
			public function init():void {
				remoteObject.endpoint = "http://localhost:" + prefs.getValue("port", "8080") + "/daisyworks/messagebroker/amf";;
			}
			
			[EventHandler(event="BluetoothEvent.CONNECTED")]
			public function connected():void {
				isConnected=true;
				if(!consumer.subscribed) { consumer.subscribe(); }
			}
			
			[EventHandler(event="BluetoothEvent.DISCONNECTED")]
			public function disconnected():void {
				isConnected=false;
				if(consumer.subscribed) { consumer.unsubscribe(); }
			}
			
			protected function sendTI_keyDownHandler(event:KeyboardEvent):void {				
				if(event.keyCode == Keyboard.ENTER) {
					sendTextCommand(sendTI.text);
				}
			}
			
			protected function sendButton_clickHandler(event:MouseEvent):void {
				sendTextCommand(sendTI.text);
			}
			
			private function sendTextCommand(command:String):void {
				// clear TI
				sendTI.text = '';
				// append it to text area
				consoleTA.text += '\ntx> ' + command;
				// send it to the device
				remoteObject.send(command);
			}


			protected function consumer_messageHandler(event:MessageEvent):void	{
				consoleTA.text += '\nrx> ' + event.message.body;
				scrollDown();
			}
			
			protected function sendResult(evt:ResultEvent):void {
				
			}
			
			protected function sendFault(evt:FaultEvent):void {
				Alert.show(evt.fault.faultString, "Failed to send the command");
			}
						
			private function scrollDown(event:Event=null):void {
				// scroll with the text
				consoleTA.scroller.verticalScrollBar.value = consoleTA.scroller.verticalScrollBar.maximum + 100;
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<s:ChannelSet id="channelSet">
			<s:AMFChannel url="http://localhost:8080/daisyworks/messagebroker/amf" />
		</s:ChannelSet>	
		<s:Consumer destination="serialPort" id="consumer" channelSet="{channelSet}" message="consumer_messageHandler(event)" />
		<s:RemoteObject id="remoteObject" destination="bluetoothService" showBusyCursor="false" >
			<s:method name="send" result="sendResult(event)" fault="sendFault(event)" />
		</s:RemoteObject>
	</fx:Declarations>
	<mx:TabNavigator id="tabNavigator" width="100%" height="100%">
		<mx:VBox label="Help" width="100%" height="100%">
			<s:Label text="Help goes here"/>
		</mx:VBox>
		<mx:VBox label="Serial Console" width="100%" height="100%" borderVisible="false">
		<s:Panel left="10" right="10" bottom="0" title="Serial Console" top="95" dropShadowVisible="false" width="100%" height="100%" borderVisible="false">
			<s:layout>
				<s:VerticalLayout gap="0"/>
			</s:layout>
			<s:HGroup height="30" verticalAlign="middle" width="100%" paddingLeft="10">
				<s:TextInput width="210" id="sendTI" keyDown="sendTI_keyDownHandler(event)" enabled="{isConnected}"/>
				<s:Button label="Send" id="sendButton" click="sendButton_clickHandler(event)" enabled="{isConnected}"/>
				<s:Label height="100%" verticalAlign="middle" width="100%" id="errorLabel"/>
			</s:HGroup>
			<s:TextArea width="100%" height="100%" id="consoleTA" editable="false" 
						enabled="true" verticalScrollPolicy="on" 
						valueCommit="scrollDown(event)"
						resize="scrollDown(event)" contentBackgroundColor="#E6E7E2" borderVisible="false"/>
		</s:Panel>
		</mx:VBox>
	</mx:TabNavigator>
	
	
</s:Group>
