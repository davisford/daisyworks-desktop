<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 creationComplete="onCreationComplete(event)"
		 resize="resizeHandler(event)"
		 width="100%" height="100%" xmlns:view="daisyworks.view.*">
	<s:layout>
		<s:VerticalLayout paddingBottom="15"
						  paddingTop="15"
						  paddingLeft="15"
						  paddingRight="15"/>
	</s:layout>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import daisyworks.event.*;
			import daisyworks.model.*;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.events.ResizeEvent;
			import mx.rpc.Fault;
			
			private var _prefs:Preferences;
			
			[Bindable]
			private var devices:ArrayCollection;
			
			[Bindable]
			private var buttonWidth:Number = 155;
			
			[Inject]
			public function get prefs():Preferences { return _prefs; }
			
			public function set prefs(val:Preferences):void {
				_prefs = val;
				FlexGlobals.topLevelApplication.height = _prefs.getValue(Preferences.HEIGHT, 470);
				FlexGlobals.topLevelApplication.width  = _prefs.getValue(Preferences.WIDTH, 1250);
			}
			
			public function onCreationComplete(event:FlexEvent):void {
				
			}
			
			[PostConstruct]
			/**
			 * Put stuff in here that should boot-strap the app
			 */
			public function go():void {
				// watchdog manages JVM lifecycle for us
				dispatchEvent(new Event("startWatchdog", true));
			}
			
			public function close():void {
				// tell the JVM to shutdown
				dispatchEvent(new Event("shutdownJVM", true));
				prefs.save();
			}
			
			private function resizeHandler(event:ResizeEvent):void {
				if(prefs) {
					prefs.setValue(Preferences.WIDTH, root.width);
					prefs.setValue(Preferences.HEIGHT, root.height);
				}
			}
			
			[EventHandler(event="DaisyWorksEvent.JVM_START_FAILURE", properties="message")]
			/**
			 * If Java can't be started
			 */
			public function javaFailed(message:String):void {
				Alert.show(message, "DaisyWorks encountered a problem and must now close.", 4, null, function(e:CloseEvent):void {
					NativeApplication.nativeApplication.exit(0);
				});
			}
			
			[EventHandler(event="DaisyWorksEvent.HTTP_404", properties="message")]
			/**
			 * What happens if JVM process starts, but we get 404 on AMF channel?
			 * This is most likely b/c another process is already bound to the port
			 */
			public function javaCommLost(message:String):void {
				Alert.show(message, "Please check the port settings", 4);
			}
			
			[EventHandler(event="DaisyWorksEvent.BLUETOOTH_FAILURE", properties="message, fault")]
			public function bluetoothFailure(message:String, fault:Fault):void {
				Alert.show(fault.faultString, message);
			}
			

			protected function accordion_changeHandler(event:IndexChangedEvent):void
			{
				viewstack.selectedIndex = event.newIndex;
			}

		]]>
	</fx:Script>
	
	<fx:Declarations>

	</fx:Declarations>
	
	<mx:HDividedBox id="hdivide" width="100%" height="100%">
		<mx:Accordion id="accordion" width="25%" headerHeight="40" height="100%" horizontalCenter="0" minWidth="300"  change="accordion_changeHandler(event)">
			<s:NavigatorContent id="discoverySettings" left="5" right="5" width="100%" height="100%" label="Discover / Connect" icon="{Icons.BLUETOOTH}">
				<s:layout>
					<s:BasicLayout/>
				</s:layout>
				<view:DiscoverSideBar width="100%" x="0" height="100%"/>
			</s:NavigatorContent>
			<s:NavigatorContent id="programSettings" left="5" right="5" width="100%" height="100%" label="App Store" icon="{Icons.APPLICATIONS}">
				<view:AppStoreSideBar width="100%" x="0" height="100%" />
			</s:NavigatorContent>
			<s:NavigatorContent id="controlSettings" left="5" right="5" width="100%" height="100%" label="Interact" icon="{Icons.CONTROL}">
				<view:InteractSideBar width="100%" height="100%" x="0" />
			</s:NavigatorContent>
			<s:NavigatorContent id="cloudSettings" left="5" right="5" width="100%" height="100%" label="Settings" icon="{Icons.SETTINGS}">
				<s:Label text="manage the cloud settings" />
			</s:NavigatorContent>
		</mx:Accordion>
		<mx:ViewStack id="viewstack" width="75%" height="100%">
			<s:NavigatorContent id="discovery">
				<view:DiscoverMain />
			</s:NavigatorContent>
			<s:NavigatorContent id="appstore">
				<view:AppStoreMain>
				</view:AppStoreMain>
			</s:NavigatorContent>
			<s:NavigatorContent id="control">
				<view:InteractMain />
			</s:NavigatorContent>
			<s:NavigatorContent id="cloud">
				<s:Label text="cloud" />
			</s:NavigatorContent>
		</mx:ViewStack>
	</mx:HDividedBox>
</s:Group>