<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" currentState="Ready">
	<s:layout>
		<s:VerticalLayout horizontalAlign="left" paddingLeft="10" paddingRight="10" paddingBottom="10" paddingTop="10"/>
	</s:layout>
	<fx:Script>
		<![CDATA[
			import daisyworks.event.BluetoothEvent;
			import daisyworks.model.Device;
			import daisyworks.model.Preferences;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.ListEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;

			[Bindable]
			private var devices:ArrayCollection;
						
			private var selected:Device;
			
			[Inject]
			public var prefs:Preferences;
			
			[PostConstruct]
			public function init():void {
				remoteObject.endpoint = "http://localhost:" + prefs.getValue("port", "8080") + "/daisyworks/messagebroker/amf";
			}
			
			[EventHandler(event="DaisyWorksEvent.JVM_STARTED")]
			public function postJvmStarted():void {
				if(currentState == 'Ready') {
					currentState='Scanning';
					remoteObject.findDevices();
				}
			}
			
			[EventHandler(event="BluetoothEvent.DISCONNECT", properties="device")]
			public function disconnect(device:Device):void {
				remoteObject.disconnectRFComm(device.address);
			}

			private function discoverBtn_clickHandler(event:MouseEvent):void {
				// discover bluetooth devices around us
				currentState='Scanning';
				remoteObject.findDevices();
			}

			private function datagrid_itemClickHandler(event:ListEvent):void {
				selected = dataGrid.selectedItem as Device;
				if(selected) { remoteObject.findServices(selected.address);	}
			}
			
			////////////// REMOTE OBJECT RESULT/FAULT HANDLERS ////////////////////
			
			
			// ___________ FIND DEVICES ___________ //
			
			private function findDevicesResult(evt:ResultEvent):void {
				devices = evt.result as ArrayCollection;
				currentState='Ready';
			}
			
			private function findDevicesFault(evt:FaultEvent):void {
				Alert.show(evt.fault.faultString, "Failed to discover Bluetooth devices");
				currentState='Ready';
			}
			
			// ___________ FIND SERVICES __________ //
			
			private function findServicesResult(evt:ResultEvent):void {
				var device:Device = dataGrid.selectedItem as Device;
				if(device) { remoteObject.connectRFComm(device.address); }
			}
			
			private function findServicesFault(evt:FaultEvent):void {
				Alert.show(evt.fault.faultString, "Failed to discover RFCOMM service on device "+selected.name);
				currentState='Ready';
			}
			
			// ____________ CONNECT _______________ //
			
			private function connectResult(evt:ResultEvent):void {
				dispatchEvent(new BluetoothEvent(BluetoothEvent.CONNECTED, selected));
				currentState='Ready';
			}
			
			private function connectFault(evt:FaultEvent):void {
				Alert.show(evt.fault.faultString, "Failed to connect to device "+selected.name);
				currentState='Ready';
			}
			
			// ____________ DISCONNECT ______________ //
			
			private function disconnectResult(evt:ResultEvent):void {
				dispatchEvent(new BluetoothEvent(BluetoothEvent.DISCONNECTED));
			}
			
			private function disconnectFault(evt:FaultEvent):void {
				Alert.show(evt.fault.faultString, "Failed to disconnect from device "+selected.name);
			}

		]]>
	</fx:Script>
	<s:states>
		<s:State name="Ready"/>
		<s:State name="Scanning"/>
	</s:states>
	
	<fx:Declarations>
		<s:RemoteObject id="remoteObject" destination="bluetoothService" showBusyCursor="true" >
			<s:method name="findDevices" result="findDevicesResult(event)" fault="findDevicesFault(event)" />
			<s:method name="findServices" result="findServicesResult(event)" fault="findServicesFault(event)" />
			<s:method name="connectRFComm" result="connectResult(event)" fault="connectFault(event)" />
			<s:method name="disconnectRFComm" result="disconnectResult(event)" fault="disconnectFault(event)" />
		</s:RemoteObject>
	</fx:Declarations>
	
	<s:HGroup width="100%" height="30" verticalAlign="middle">
		<s:Button label="Refresh" click="discoverBtn_clickHandler(event)" enabled.Ready="true" enabled.Scanning="false" />
		<s:Label text.Ready="Select a device to connect" text.Scanning="Scanning..."/>
	</s:HGroup>
	
	<mx:DataGrid id="dataGrid"
		dataProvider="{devices}" enabled.Ready="true" enabled.Scanning="false"
				 itemClick="datagrid_itemClickHandler(event)"
				 left="10" 
				 right="10" 
				 top="50" 
				 width="100%" 
				 height="100%" 
				 paddingLeft="10" 
				 paddingRight="10">
		<mx:columns>
			<mx:DataGridColumn headerText="Name" dataField="name"/>
			<mx:DataGridColumn headerText="Address" dataField="address"/>
		</mx:columns>
	</mx:DataGrid>
</s:Group>
