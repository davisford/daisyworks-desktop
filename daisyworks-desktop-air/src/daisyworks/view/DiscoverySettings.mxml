<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%">
	<s:layout>
		<s:VerticalLayout horizontalAlign="center" paddingLeft="10" paddingRight="10" paddingBottom="10"/>
	</s:layout>
	<fx:Script>
		<![CDATA[
			import daisyworks.event.BluetoothEvent;
			import daisyworks.model.Device;
			import daisyworks.model.Preferences;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.ListEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;

			[Bindable]
			private var devices:ArrayCollection;
			
			[Bindable]
			private var localDevice:Device;
			
			private var selected:Device;
			
			[Inject]
			public var prefs:Preferences;
			
			[PostConstruct]
			public function init():void {
				remoteObject.endpoint = "http://localhost:" + prefs.getValue("port", "8080") + "/daisyworks/messagebroker/amf";;
			}
			
			[EventHandler(event="DaisyWorksEvent.JVM_STARTED")]
			public function postJvmStarted():void {
				// should we trigger discovery, but jetty may not be ready yet...
			}
			
			[EventHandler(event="BluetoothEvent.DISCONNECT", properties="device")]
			public function disconnect(device:Device):void {
				remoteObject.disconnectRFComm(device.address);
			}

			private function discoverBtn_clickHandler(event:MouseEvent):void {
				// fetch the local device info
				remoteObject.getLocalDevice();
				// discover bluetooth devices around us
				remoteObject.findDevices();
			}

			private function datagrid_itemClickHandler(event:ListEvent):void {
				selected = dataGrid.selectedItem as Device;
				if(selected) { remoteObject.findServices(selected.address);	}
			}
			
			////////////// REMOTE OBJECT RESULT/FAULT HANDLERS ////////////////////
			
			
			// __________ GET LOCAL DEVICE ____________ //
			private function localDeviceResult(evt:ResultEvent):void {
				localDevice = evt.result as Device;
			}
			
			private function localDeviceFault(evt:FaultEvent):void {
				Alert.show(evt.fault.faultDetail, "Failed to find local Bluetooth Adapter Information");
			}
			
			// ___________ FIND DEVICES ___________ //
			
			private function findDevicesResult(evt:ResultEvent):void {
				devices = evt.result as ArrayCollection;
			}
			
			private function findDevicesFault(evt:FaultEvent):void {
				Alert.show(evt.fault.faultDetail, "Failed to discover Bluetooth devices");
			}
			
			// ___________ FIND SERVICES __________ //
			
			private function findServicesResult(evt:ResultEvent):void {
				var device:Device = dataGrid.selectedItem as Device;
				if(device) { remoteObject.connectRFComm(device.address); }
			}
			
			private function findServicesFault(evt:FaultEvent):void {
				Alert.show(evt.fault.faultDetail, "Failed to discover RFCOMM service on device "+selected.name);	
			}
			
			// ____________ CONNECT _______________ //
			
			private function connectResult(evt:ResultEvent):void {
				dispatchEvent(new BluetoothEvent(BluetoothEvent.CONNECTED, selected));
			}
			
			private function connectFault(evt:FaultEvent):void {
				Alert.show(evt.fault.faultDetail, "Failed to connect to device "+selected.name);
			}
			
			// ____________ DISCONNECT ______________ //
			
			private function disconnectResult(evt:ResultEvent):void {
				dispatchEvent(new BluetoothEvent(BluetoothEvent.DISCONNECTED));
			}
			
			private function disconnectFault(evt:FaultEvent):void {
				Alert.show(evt.fault.faultDetail, "Failed to disconnect from device "+selected.name);
			}

		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:RemoteObject id="remoteObject" destination="bluetoothService" showBusyCursor="true" >
			<s:method name="findDevices" result="findDevicesResult(event)" fault="findDevicesFault(event)" />
			<s:method name="getLocalDevice" result="localDeviceResult(event)" fault="localDeviceFault(event)" />
			<s:method name="findServices" result="findServicesResult(event)" fault="findServicesFault(event)" />
			<s:method name="connectRFComm" result="connectResult(event)" fault="connectFault(event)" />
			<s:method name="disconnectRFComm" result="disconnectResult(event)" fault="disconnectFault(event)" />
		</s:RemoteObject>
	</fx:Declarations>
	
	<mx:Form width="100%" height="109">
		<mx:FormItem label="Local Device Name" width="100%">
			<s:TextInput width="100%" id="localNameTI" text="{localDevice.name}" enabled="false"/>
		</mx:FormItem>
		<mx:FormItem label="Local Device Address" width="100%">
			<s:TextInput width="100%" id="localAddressTI" text="{localDevice.address}" enabled="false"/>
		</mx:FormItem>
		<mx:FormItem width="100%">
			<s:Button label="Refresh" click="discoverBtn_clickHandler(event)"/>
		</mx:FormItem>
	</mx:Form>
	
	<mx:DataGrid id="dataGrid"
		dataProvider="{devices}" 
				 itemClick="datagrid_itemClickHandler(event)"
				 left="10" 
				 right="10" 
				 top="50" 
				 width="100%" 
				 height="100%" 
				 paddingLeft="10" 
				 paddingRight="10">
		<mx:columns>
			<mx:DataGridColumn headerText="Address" dataField="address"/>
			<mx:DataGridColumn headerText="Name" dataField="name"/>
		</mx:columns>
	</mx:DataGrid>
</s:Group>
