<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="100%" 
		 xmlns:itemrenderers="daisyworks.view.itemrenderers.*">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	
	<fx:Script>
		<![CDATA[
			import daisyworks.event.AppEvent;
			import daisyworks.event.AppStoreEvent;
			import daisyworks.model.App;
			import daisyworks.model.Icons;
			import daisyworks.model.presentation.AppPresentationModel;
			
			import mx.collections.ArrayCollection;
			
			import spark.events.GridSelectionEvent;

			[Inject]
			[Bindable]
			public var model:AppPresentationModel; 
						
			public static var markedForDelete:ArrayCollection = new ArrayCollection();
			
			[PostConstruct]
			public function init():void {
				dispatchEvent(new AppEvent(AppEvent.LIST));
			}
			
			protected function appGrid_selectionChangeHandler(event:GridSelectionEvent):void
			{
				dispatchEvent(new AppEvent(AppEvent.DEPLOY, App(appGrid.selectedItem)));
			}
												
			protected function updateButton_clickHandler(event:MouseEvent):void
			{
				for each (var app:App in model.installedApps) {
					if(app.selected) {
						dispatchEvent(new AppEvent(AppEvent.DOWNLOAD, app));
					}
				}
			}
			
			protected function deleteButton_clickHandler(event:MouseEvent):void
			{
				for each (var app:App in model.installedApps) {
					if(app.selected) {
						dispatchEvent(new AppEvent(AppEvent.REMOVE, app));
					}
				}
			}
			
			[EventHandler(event="AppEvent.DOWNLOAD_COMPLETE")]
			public function onAppsAdded():void {
				model.installedApps.refresh();
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		
	</fx:Declarations>
	<s:Label text="Installed Applications" paddingLeft="5" paddingTop="5" paddingRight="5" verticalAlign="middle" paddingBottom="5" left="10" right="10" top="10" height="25"/>
	
	<s:DataGrid id="appGrid" top="89" left="10" right="10" bottom="63" 
				dataProvider="{model.installedApps}" selectionChange="appGrid_selectionChangeHandler(event)" >
		<s:columns>
			<s:ArrayList>
				<s:GridColumn headerText="" width="29" >
					<s:itemRenderer>
						<fx:Component>
							<itemrenderers:GridIconItemRenderer iconSize="29" />
						</fx:Component>
					</s:itemRenderer>
				</s:GridColumn>
				<s:GridColumn headerText="" width="29" headerRenderer="daisyworks.view.itemrenderers.GridHeaderUpdateIconItemRenderer" >
					<s:itemRenderer>
						<fx:Component>
							<itemrenderers:GridUpdateIconItemRenderer />
						</fx:Component>
					</s:itemRenderer>
					
				</s:GridColumn>
				<s:GridColumn headerText="Name" dataField="name" />
				<s:GridColumn headerText="" dataField="selected" width="29" >
					<s:itemRenderer>
						<fx:Component>
							<s:GridItemRenderer>
								<s:CheckBox id="cb" label="" selected="@{data.selected}" horizontalCenter="0" />
							</s:GridItemRenderer>
						</fx:Component>
					</s:itemRenderer>
				</s:GridColumn>
			</s:ArrayList>
		</s:columns>
	</s:DataGrid>
	<s:BorderContainer left="10" right="10" top="35" height="45" borderWeight="2">
		<s:Button id="updateButton" left="10" top="10" bottom="10" width="70" label="Update" click="updateButton_clickHandler(event)"/>
		<s:Label x="88" top="10" bottom="10" text="Update all checked Apps" verticalAlign="middle"/>
		<s:Button id="checkForUpdateButton" right="5" top="10" bottom="10" width="20"
				  click="dispatchEvent(new AppStoreEvent(AppStoreEvent.SEARCH, ''));"
				  icon="{Icons.UPDATE}" toolTip="Check for updates"/>
	</s:BorderContainer>
	<s:BorderContainer left="10" right="10" bottom="10" height="45" borderWeight="2">
		<s:Button id="deleteButton" left="10" top="10" bottom="10" label="Delete" click="deleteButton_clickHandler(event)"/>
		<s:Label x="88" top="10" bottom="10" width="278" text="Delete all checked Apps"
				 verticalAlign="middle"/>
	</s:BorderContainer>
	
</s:Group>
