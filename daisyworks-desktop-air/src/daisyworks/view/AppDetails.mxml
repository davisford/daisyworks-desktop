<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="100%" height="100%">
	<s:layout>
		<s:VerticalLayout paddingBottom="15" paddingLeft="15" paddingRight="15" paddingTop="15"/>
	</s:layout>

	<fx:Metadata>
		[Event(name="navigateAway")]
	</fx:Metadata>

	<fx:Script>
		<![CDATA[
			import com.adobe.utils.DateUtil;
			
			import daisyworks.event.AppEvent;
			
			import mx.collections.XMLListCollection;
			
			import spark.events.IndexChangeEvent;
			import spark.utils.TextFlowUtil;

			private var _app:XML;
			[Bindable]
			private var releaseDate:String;

			public function set app(app:XML):void
			{
				_app=app;
				releaseDate = getDate(app.released[0]);
			}

			[Bindable]
			public function get app():XML
			{
				return _app;
			}
			
			private function getDate(xml:XML):String {
				try {
					return dateTimeFormatter.format(DateUtil.parseW3CDTF(xml));
				} catch(e:Error) { 
					// don't crash the UI if this has an error, just display nothing
				}
				return ''; 
			}

			protected function downloadButton_clickHandler(event:MouseEvent):void
			{
				downloadButton.enabled=false;
				// dispatch event to download .zip and store it. 
				dispatchEvent(new AppEvent(AppEvent.DOWNLOAD, app));
			}

			[EventHandler(event="AppEvent.DOWNLOAD_COMPLETE")]
			public function downloadComplete():void
			{
				// TODO manage installation state
				downloadButton.enabled=true;
			}
			
			protected function softwareList_changeHandler(event:IndexChangeEvent):void
			{
				trace("on list change old index {0}, new index {1}", event.oldIndex, event.newIndex);
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:DateTimeFormatter id="dateTimeFormatter" dateStyle="long" timeStyle="none"/>
	</fx:Declarations>

			<s:HGroup width="100%" height="202">
				<s:VGroup horizontalAlign="center">
					<mx:LinkButton label="&lt;&lt; Back"
								   click="dispatchEvent(new Event('navigateAway'));" color="#0000FF"
								   textDecoration="underline"/>
					<mx:Image width="128" height="128" source="{app.icons.icon128x128}"/>
					<s:Button id="downloadButton" label="Free"
							  click="downloadButton_clickHandler(event)"/>
				</s:VGroup>
				<s:VGroup width="100%" horizontalAlign="center">
					<s:Label width="100%" height="35" fontSize="20" fontWeight="bold"
							 maxDisplayedLines="1" showTruncationTip="true" text="{app.name}"
							 textAlign="center" verticalAlign="middle"/>
					<s:Scroller width="100%" height="150" horizontalScrollPolicy="off">
						<s:Group >
							<s:layout>
								<s:BasicLayout/>
							</s:layout>
							<s:RichText left="10" right="10" top="10"
										textFlow="{TextFlowUtil.importFromString(app.description)}"/>
						</s:Group>	
					</s:Scroller>
				</s:VGroup>

			</s:HGroup>
			<s:Scroller width="100%" height="100%" horizontalScrollPolicy="off">
				<s:Group clipAndEnableScrolling="true">
					<s:layout>
						<s:BasicLayout />
					</s:layout>
					<s:Form left="10" right="10" top="10">
						<s:FormItem width="100%" label="Author" fontWeight="normal">
							<s:Label width="100%" height="100%" maxDisplayedLines="3"
									 text="{app.author}" verticalAlign="middle"/>
						</s:FormItem>
						<s:FormItem width="100%" label="Web" fontWeight="normal" textAlign="left">
							<mx:LinkButton width="100%" height="100%" label="{app.authorUrl}"
										   paddingLeft="0" paddingRight="0" textAlign="left"/>
						</s:FormItem>
						<s:FormItem width="100%" label="Released" fontWeight="normal">
							<s:Label width="100%" height="100%" lineBreak="explicit"
									 maxDisplayedLines="10"
									 text="{releaseDate}"
									 verticalAlign="middle"/>
						</s:FormItem>
						<s:FormItem width="100%" label="Categories" fontWeight="normal">
							<s:layout>
								<s:TileLayout orientation="rows"/>
							</s:layout>

								<s:List borderVisible="false" enabled="false">
									<s:layout>
										<s:HorizontalLayout/>
									</s:layout>
									<s:dataProvider>
										<s:XMLListCollection source="{app.categories.children()}"/>
										
									</s:dataProvider>
								</s:List>
						</s:FormItem>
						<s:FormItem width="100%" label="Requirements" fontWeight="normal">
							
							<s:Label width="100%" height="100%" lineBreak="explicit" maxDisplayedLines="10"
									 text="todo"/>
						</s:FormItem>
						<s:FormItem width="100%" label="Software" skinClass="daisyworks.view.skins.FormItemSkinWithButton">
							<s:List id="softwareList" itemRenderer="daisyworks.view.itemrenderers.ExpandoItemRenderer" width="100%" 
									allowMultipleSelection="true" change="softwareList_changeHandler(event)">
								<s:layout>
									<s:VerticalLayout gap="2" />
								</s:layout>
								<s:dataProvider>
									<s:XMLListCollection source="{app.software.children()}"/>
								</s:dataProvider>
							</s:List>
						</s:FormItem>
					</s:Form>
				</s:Group>
				
			</s:Scroller>
			

</s:Group>
